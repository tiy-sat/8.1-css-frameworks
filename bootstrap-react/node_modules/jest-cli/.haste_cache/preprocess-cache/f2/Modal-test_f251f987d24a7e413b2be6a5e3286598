// __tests__/CheckboxWithLabel-test.js
'use strict';





jest.unmock('../modules/Modal');var /*istanbul ignore next*/_react = require('react'); /*istanbul ignore next*/var _react2 = _interopRequireDefault(_react);var /*istanbul ignore next*/_reactDom = require('react-dom'); /*istanbul ignore next*/var _reactDom2 = _interopRequireDefault(_reactDom);var /*istanbul ignore next*/_reactAddonsTestUtils = require('react-addons-test-utils'); /*istanbul ignore next*/var _reactAddonsTestUtils2 = _interopRequireDefault(_reactAddonsTestUtils);var /*istanbul ignore next*/_Modal = require('../modules/Modal'); /*istanbul ignore next*/var _Modal2 = _interopRequireDefault(_Modal);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('Modal', function () {

  it('should not be visible by default', function () {
    // This places our component into our test to find off of
    var modal = /*istanbul ignore next*/_reactAddonsTestUtils2.default.renderIntoDocument(
    /*istanbul ignore next*/_react2.default.createElement( /*istanbul ignore next*/_Modal2.default, /*istanbul ignore next*/null));

    // find modal on page
    var modalHidden = /*istanbul ignore next*/_reactAddonsTestUtils2.default.findRenderedDOMComponentWithClass(modal, "hidden");
    // assert it has text
    expect(modalHidden).toBeDefined();});


  it('should be visible when isOpen equals true', function () {
    var modal = /*istanbul ignore next*/_reactAddonsTestUtils2.default.renderIntoDocument(
    /*istanbul ignore next*/_react2.default.createElement( /*istanbul ignore next*/_Modal2.default, /*istanbul ignore next*/{ isOpen: true }));


    // find modal on page
    var modalOpen = /*istanbul ignore next*/_reactAddonsTestUtils2.default.findRenderedDOMComponentWithClass(modalOpen, "modal");

    expect(modalOpen).toBeDefined();});});